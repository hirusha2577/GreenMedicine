name: GreenMedicine CI/CD Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  DOCKER_USER_SHEHAN: ${{secrets.DOCKER_USER_SHEHAN}}
  DOCKER_PASSWORD_SHEHAN: ${{secrets.DOCKER_PASSWORD_SHEHAN}}
  ORDER_REPO_NAME_SHEHAN: ${{secrets.ORDER_REPO_NAME_SHEHAN}}
  DELIVERY_REPO_NAME_SHEHAN: ${{secrets.DELIVERY_REPO_NAME_SHEHAN}}
  DOCKER_USER_THANU: ${{secrets.DOCKER_USER_THANU}}
  DOCKER_PASSWORD_THANU: ${{secrets.DOCKER_PASSWORD_THANU}}
  AUTH_REPO_NAME_THANU: ${{secrets.AUTH_REPO_NAME_THANU}}
  USER_REPO_NAME_THANU: ${{secrets.USER_REPO_NAME_THANU}}
  DOCKER_USER_HIRUSHA: ${{secrets.DOCKER_USER_HIRUSHA}}
  DOCKER_PASSWORD_HIRUSHA: ${{secrets.DOCKER_PASSWORD_HIRUSHA}}
  PRODUCT_REPO_NAME_HIRUSHA: ${{secrets.PRODUCT_REPO_NAME_HIRUSHA}}
  PAYMENT_REPO_NAME_HIRUSHA: ${{secrets.PAYMENT_REPO_NAME_HIRUSHA}}
  DOCKER_USER_THISARA: ${{secrets.DOCKER_USER_THISARA}}
  DOCKER_PASSWORD_THISARA: ${{secrets.DOCKER_PASSWORD_THISARA}}
  CART_REPO_NAME_THISARA: ${{secrets.CART_REPO_NAME_THISARA}}
  EMAIL_REPO_NAME_THISARA: ${{secrets.EMAIL_REPO_NAME_THISARA}}
  PROJECT_ID: ${{secrets.GKE_PROJECT}}
  GKE_CLUSTER: clay-cluster-1
  GKE_ZONE: us-central1
  DEPLOYMENT_NAME: github-actions-gke-deployment
  IMAGE: github-actions-gke-image
  TAG: 1.0.0 

jobs:
  user-service:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Docker login
      run: | # Login to Dockerhub - thanu
        docker login -u $DOCKER_USER_THANU -p $DOCKER_PASSWORD_THANU
    - name: Build user service docker image
      run: |
        cd src/user_service
        docker build . --file Dockerfile --tag $DOCKER_USER_THANU/$USER_REPO_NAME_THANU
    - name: Push user service docker image
      run: docker push $DOCKER_USER_THANU/$USER_REPO_NAME_THANU
  
  auth-service:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Docker login
      run: | # Login to Dockerhub - thanu
        docker login -u $DOCKER_USER_THANU -p $DOCKER_PASSWORD_THANU
    - name: Build auth service docker image
      run: |
        cd src/auth_service
        docker build . --file Dockerfile --tag $DOCKER_USER_THANU/$AUTH_REPO_NAME_THANU
    - name: Push auth service docker image
      run: docker push $DOCKER_USER_THANU/$AUTH_REPO_NAME_THANU

  order-service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Docker login
        run: | # Login to Dockerhub - shehan
          docker login -u $DOCKER_USER_SHEHAN -p $DOCKER_PASSWORD_SHEHAN
      - name: Build order service docker image
        run: |
          cd src/order_service
          docker build . --file Dockerfile --tag $DOCKER_USER_SHEHAN/$ORDER_REPO_NAME_SHEHAN
      - name: Push order service docker image
        run: docker push $DOCKER_USER_SHEHAN/$ORDER_REPO_NAME_SHEHAN

  delivery-service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Java version
        uses: actions/setup-java@v1
        with:
          java-version: '17'
      - name: Build with Maven
        run: |
          cd src/delivery_service
          mvn clean package
      - name: Docker login
        run: | # Login to Dockerhub - shehan
          docker login -u $DOCKER_USER_SHEHAN -p $DOCKER_PASSWORD_SHEHAN
      - name: Build delivery service docker image
        run: |
          cd src/delivery_service
          docker build . --file Dockerfile --tag $DOCKER_USER_SHEHAN/$DELIVERY_REPO_NAME_SHEHAN
      - name: Push delivery service docker image
        run: docker push $DOCKER_USER_SHEHAN/$DELIVERY_REPO_NAME_SHEHAN

  email-service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Docker login
        run: | # Login to Dockerhub - thisara
          docker login -u $DOCKER_USER_THISARA -p $DOCKER_PASSWORD_THISARA
      - name: Build email service docker image
        run: |
          cd src/email_service
          docker build . --file Dockerfile --tag $DOCKER_USER_THISARA/$EMAIL_REPO_NAME_THISARA
      - name: Push email service docker image
        run: docker push $DOCKER_USER_THISARA/$EMAIL_REPO_NAME_THISARA

  cart-service:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Java version
      uses: actions/setup-java@v1
      with:
        java-version: '17'
    - name: Build with Maven
      run: |
        cd src/cart_service
        mvn clean package
    - name: Docker login
      run: | # Login to Dockerhub - thisara
        docker login -u $DOCKER_USER_THISARA -p $DOCKER_PASSWORD_THISARA
    - name: Build cart service docker image
      run: |
        cd src/cart_service
        docker build . --file Dockerfile --tag $DOCKER_USER_THISARA/$CART_REPO_NAME_THISARA
    - name: Push cart service docker image
      run: docker push $DOCKER_USER_THISARA/$CART_REPO_NAME_THISARA
  
  product-service:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Java version
      uses: actions/setup-java@v1
      with:
        java-version: '17'
    - name: Build with Maven
      run: |
        cd src/product_service
        mvn clean package
    - name: Docker login
      run: | # Login to Dockerhub - hirusha
        docker login -u $DOCKER_USER_HIRUSHA -p $DOCKER_PASSWORD_HIRUSHA
    - name: Build product service docker image
      run: |
        cd src/product_service
        docker build . --file Dockerfile --tag $DOCKER_USER_HIRUSHA/$PRODUCT_REPO_NAME_HIRUSHA
    - name: Push product service docker image
      run: docker push $DOCKER_USER_HIRUSHA/$PRODUCT_REPO_NAME_HIRUSHA

  payment-service:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Java version
      uses: actions/setup-java@v1
      with:
        java-version: '17'
    - name: Build with Maven
      run: |
        cd src/payment_service
        mvn clean package
    - name: Docker login
      run: | # Login to Dockerhub - hirusha
        docker login -u $DOCKER_USER_HIRUSHA -p $DOCKER_PASSWORD_HIRUSHA
    - name: Build payment service docker image
      run: |
        cd src/payment_service
        docker build . --file Dockerfile --tag $DOCKER_USER_HIRUSHA/$PAYMENT_REPO_NAME_HIRUSHA
    - name: Push payment service docker image
      run: docker push $DOCKER_USER_HIRUSHA/$PAYMENT_REPO_NAME_HIRUSHA
  
  deploy:
    needs: [order-service, email-service, cart-service, product-service,user-service,auth-service,delivery-service,payment-service]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: üõ† Configure Kubernetes Credentials
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@0.1.3
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      with:
        service_account_key: ${{secrets.GKE_SA_KEY}}
        project_id: ${{secrets.GKE_PROJECT}}
    - name: ‚¨ÜÔ∏è Deploy to K8s
      run: gclude containre clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE" --project superb-garden-387115
